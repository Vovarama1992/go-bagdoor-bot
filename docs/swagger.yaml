definitions:
  http_auth.TelegramAuthRequest:
    properties:
      init_data:
        type: string
    type: object
  http_auth.TelegramAuthResponse:
    properties:
      access_token:
        type: string
    type: object
  http_flight.FlightFullResponse:
    properties:
      description:
        type: string
      destination:
        type: string
      flight_date:
        type: string
      flight_number:
        type: string
      id:
        type: integer
      map_url:
        type: string
      origin:
        type: string
      published_at:
        type: string
      publisher_tg_id:
        type: integer
      publisher_username:
        type: string
      status:
        type: string
    type: object
  http_flight.FlightRequest:
    properties:
      description:
        example: Лечу налегке, могу взять документы.
        type: string
      destination:
        example: Москва
        type: string
      flight_date:
        description: dd/mm/yy
        example: 10/06/25
        type: string
      origin:
        example: Санкт-Петербург
        type: string
    type: object
  http_flight.FlightResponse:
    properties:
      flight_number:
        example: 'Рейс #1234-5678'
        type: string
      id:
        example: 17
        type: integer
    type: object
  http_order.OrderFullResponse:
    properties:
      cost:
        type: number
      deposit:
        type: number
      description:
        type: string
      destination_city:
        type: string
      end_date:
        type: string
      id:
        type: integer
      media_urls:
        items:
          type: string
        type: array
      order_number:
        type: string
      origin_city:
        type: string
      published_at:
        type: string
      publisher_tg_id:
        type: integer
      publisher_username:
        type: string
      reward:
        type: number
      start_date:
        type: string
      status:
        $ref: '#/definitions/order.ModerationStatus'
      store_link:
        type: string
      title:
        type: string
      type:
        $ref: '#/definitions/order.OrderType'
    type: object
  http_order.OrderRequest:
    properties:
      cost:
        description: Стоимость товаров (только для типа store)
        example: 1500
        type: number
      deposit:
        description: Депозит (только для типа personal)
        example: 500
        type: number
      description:
        description: Описание задачи
        example: Нужно привезти документы из Москвы в Санкт-Петербург
        type: string
      destination_city:
        description: Город назначения
        example: Санкт-Петербург
        type: string
      end_date:
        description: Конец периода
        example: 05/06/25
        type: string
      origin_city:
        description: Город отправления
        example: Москва
        type: string
      reward:
        description: Вознаграждение исполнителю
        example: 100
        type: number
      start_date:
        description: Начало периода
        example: 01/06/25
        type: string
      store_link:
        description: Ссылка на магазин (только для типа store)
        example: https://store.com/item/123
        type: string
      title:
        description: Заголовок заказа
        example: Заказ на доставку
        type: string
      type:
        allOf:
        - $ref: '#/definitions/order.OrderType'
        description: "Тип заказа: \"personal\" или \"store\"\n\U0001F537 Для \"store\"
          обязательны поля `cost` и `store_link`\n\U0001F537 Для \"personal\" обязателен
          `deposit`"
        example: personal
    type: object
  http_order.OrderResponse:
    properties:
      id:
        type: integer
      order_number:
        type: string
    type: object
  order.ModerationStatus:
    enum:
    - PENDING
    - APPROVED
    - REJECTED
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusApproved
    - StatusRejected
  order.OrderType:
    enum:
    - personal
    - store
    type: string
    x-enum-varnames:
    - OrderTypePersonal
    - OrderTypeStore
info:
  contact: {}
paths:
  /auth/telegram:
    post:
      consumes:
      - application/json
      parameters:
      - description: Init data от Telegram
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/http_auth.TelegramAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_auth.TelegramAuthResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Invalid signature
          schema:
            type: string
        "500":
          description: User error или Token error
          schema:
            type: string
      summary: Авторизация через Telegram
      tags:
      - auth
  /flights:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http_flight.FlightFullResponse'
            type: array
        "500":
          description: Ошибка при получении рейсов
          schema:
            type: string
      summary: Получить все рейсы
      tags:
      - flights
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные рейса
        in: body
        name: flight
        required: true
        schema:
          $ref: '#/definitions/http_flight.FlightRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http_flight.FlightResponse'
        "400":
          description: Невалидный JSON или формат даты
          schema:
            type: string
        "401":
          description: Неверный или отсутствует токен
          schema:
            type: string
        "500":
          description: Ошибка сервера при создании рейса
          schema:
            type: string
      summary: Создать рейс
      tags:
      - flights
  /flights/moderated:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http_flight.FlightFullResponse'
            type: array
        "500":
          description: Ошибка при получении рейсов
          schema:
            type: string
      summary: Получить только отмодерированные рейсы
      tags:
      - flights
  /orders:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http_order.OrderFullResponse'
            type: array
        "500":
          description: Ошибка сервера при получении заказов
          schema:
            type: string
      summary: Получить все заказы
      tags:
      - orders
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные заказа
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/http_order.OrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http_order.OrderResponse'
        "400":
          description: Невалидный JSON или формат дат
          schema:
            type: string
        "401":
          description: Невалидный токен
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
        "500":
          description: Ошибка сервера при создании заказа
          schema:
            type: string
      summary: Создать заказ
      tags:
      - orders
  /orders/approved:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http_order.OrderFullResponse'
            type: array
        "500":
          description: Ошибка сервера при получении заказов
          schema:
            type: string
      summary: Получить только одобренные заказы
      tags:
      - orders
swagger: "2.0"
